{
  "ConnectionStrings": {
    "DefaultConnection": "Server=pgdb;Port=5432;Database=postgres;User Id=postgres;Password=RaGn4r0k!!;CommandTimeout=30;Timeout=15;Pooling=true;MinPoolSize=1;MaxPoolSize=200;ConnectionLifeTime=15;Include Error Detail=true;"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Error",
      "Aesir.Api": "Error",
      "Aesir.Api.Server.Services": "Error",
      "Aesir.Api.Server.Services.Implementations": "Error",
      "Aesir.Api.Server.Services.Implementations.Onnx": "Error",
      "Aesir.Api.Server.Services.Implementations.Standard": "Error",
      "Aesir.Api.Server.Services.Implementations.Standard.InferenceLoggingService": "Debug",
      "Aesir.Api.Server.Services.Implementations.Standard.LoggingHttpMessageHandler": "Error",
      "System.Net.Http": "Error",
      "Microsoft.AspNetCore": "Error",
      "Microsoft.Extensions.Http": "Error",
      "Microsoft.Extensions.Hosting": "Error",
      "Microsoft.Extensions.Diagnostics": "Error",
      "Microsoft.Extensions.AI": "Debug",
      "Microsoft.SemanticKernel": "Debug"
    }
  },
  "Configuration": {
    "LoadFromDatabase": false,
    "RestrictEmbeddingModelsTo" : [ "mxbai-embed-large:latest" ],
    "RestrictVisionModelsTo" : [ "gemma3:4b", "gemma3:12b-it-q4_K_M" ],
    "RestrictChatModelsTo" : [ "gpt-oss:latest", "gpt-oss:20b", "qwen2.5:7b", "qwen2.5:14b", "qwen3:8b", "gpt-4.1-2025-04-14", "grok-3-mini" ]
  },
  "InferenceEngines": [
    {
      "Name": "Default Ollama",
      "Type": "Ollama",
      "Configuration": {
        "Endpoint": "http://host.docker.internal:11434",
        "EnableChatModelThinking": "true"
      }
    },
    {
      "Name": "Default Open AI",
      "Type": "OpenAICompatible",
      "Configuration": {
        "Endpoint": "https://api.openai.com/v1",
        "ApiKey": "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",
        "EnableChatModelThinking": "true"
      }
    },
    {
      "Name": "Default Grok",
      "Type": "OpenAICompatible",
      "Configuration": {
        "Endpoint": "https://api.x.ai/v1/",
        "ApiKey": "xai-B7m0H8tIfJ2qzkfwv2mcabKPG8f3aDqUCmTUV4bRbGX3uLjDhLCMNOlxfZ2HzrZzxcr1OubHyY9x7FqA"
      }
    }
  ],
  "GeneralSettings": {
    "RagEmbeddingInferenceEngineName": "Default Ollama",
    "RagEmbeddingModel": "mxbai-embed-large:latest",
    "RagVisionInferenceEngineName": "Default Ollama",
    "RagVisionModel": "gemma3:12b-it-q4_K_M",
    "TtsModelPath": "Assets/vits-piper-en_US-joe-medium/en_US-joe-medium.onnx",
    "SttModelPath": "Assets/whisper/ggml-base.bin",
    "VadModelPath": "Assets/vad/silero_vad.onnx"
  },
  "McpServers": [
    {
      "Name": "petstore",
      "Description": "Petstore operations",
      "Location": "Remote",
      "Url": "https://apim-petstore-mcp-test.azure-api.net/petstore-mcp/mcp",
      "HttpHeaders": {
      },
      "EnvironmentVariables": {
      }
    }
  ],
  "Tools": [
    {
      "Name": "Web",
      "Description": "Provides the ability to search the web using Google",
      "Type": "Internal"
    },
    {
      "Name": "RAG",
      "Description": "Supports searching documents with Retrieval Augmented Generation",
      "Type": "Internal"
    },
    {
      "Name": "Pet Finder",
      "Description": "Finds pets by status",
      "Type": "McpServer",
      "McpServerName": "petstore",
      "McpServerTool": "findsPetsByStatus"
    }
  ],
  "Agents": [
    {
      "Name" : "Ollama Agent",
      "Description" : "Default Ollama agent configuration",
      "ChatInferenceEngineName": "Default Ollama",
      "ChatModel" : "gpt-oss:latest",
      "ChatPromptPersona": "Military",
      "Tools": [ "RAG", "Web" ],
      "ChatMaxTokens": 32768,
      "ChatTemperature": 0.1,
      "ChatTopP": 0.1
    },
    {
      "Name" : "OpenAI Agent",
      "Description" : "Default OpenAI agent configuration",
      "ChatInferenceEngineName": "Default Open AI",
      "ChatModel" : "gpt-4.1-2025-04-14",
      "ChatPromptPersona": "Military",
      "Tools": [ "RAG", "Web" ],
      "ChatMaxTokens": 32768,
      "ChatTemperature": 0.1,
      "ChatTopP": 0.1
    },
    {
      "Name" : "Grok Agent",
      "Description" : "Default Grok agent configuration",
      "ChatInferenceEngineName": "Default Grok",
      "ChatModel" : "grok-3-mini",
      "ChatPromptPersona": "Military",
      "Tools": [ "RAG", "Web" ],
      "ChatMaxTokens": 32768,
      "ChatTemperature": 0.1,
      "ChatTopP": 0.1
    }
  ],
  "GlobalDocumentCollections": [
    {
      "Name": "MissionDocuments",
      "IsEnabled": false,
      "PluginName": "MissionDocSearch",
      "PluginDescription": "Search and retrieve detailed information from military mission documents. It is designed to query a datasource of mission-related texts, including reports, plans, and briefings, to extract relevant details based on user-specified criteria such as mission objectives, locations, dates, or personnel. Use this tool when the task requires accessing or analyzing content within military mission documentation."
    }
  ]
}